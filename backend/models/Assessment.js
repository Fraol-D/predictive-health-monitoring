const mongoose = require("mongoose");
const { Schema } = mongoose;

// Sub-schema for AI-generated Risk Scores
const RiskScoresSchema = new Schema({
  diabetes: {
    score: Number, // 0-100
    level: String, // "Low", "Medium", "High", "Very High"
    description: String, // one-sentence explanation
  },
  heartDisease: {
    score: Number,
    level: String,
    description: String,
  },
  hypertension: {
    score: Number,
    level: String,
    description: String,
  },
  // Add other relevant risk scores as needed
});

const AssessmentSchema = new Schema({
  userId: {
    type: Schema.Types.ObjectId,
    ref: 'User',
    required: true,
  },
  assessmentId: { // This will be a UUID generated by the frontend
    type: String,
    required: true,
    unique: true,
    index: true,
  },
  date: {
    type: Date,
    default: Date.now,
  },
  // Store the full, raw assessment data from the frontend
  fullAssessmentData: {
    type: Object, // Using Object to store the flexible structure from the frontend
    required: true,
  },
  // AI-generated risk scores
  riskScores: RiskScoresSchema,
}, { timestamps: true });

// Index for faster queries by user and date
AssessmentSchema.index({ userId: 1, date: -1 });

module.exports = mongoose.model("Assessment", AssessmentSchema);
